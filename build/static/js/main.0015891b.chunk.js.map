{"version":3,"sources":["utils/network.js","components/Login.js","utils/extras.js","components/Navbar.js","components/Detail.js","components/Edit.js","components/ListItem.js","components/List.js","components/Form.js","components/Application.js","components/VerifyEmail.js","App.js","index.js"],"names":["bcrypt","require","baseURL","makeReq","url","a","errorMessage","options","fetch","then","response","ok","json","Error","getUsers","console","log","hashIt","password","genSalt","salt","hashed","hashSync","compareIt","hashedPassword","validPassword","compareSync","setUser","user","method","headers","body","JSON","stringify","logInOutUser","id","editEvent","event","deleteEventFromTheServer","eventId","init","Login","props","state","hashedPass","users","error","emailSent","userAlert","_isMounted","this","e","preventDefault","username","target","login_username","value","login_password","data","setState","filter","length","res","logStatus","_","params","email","sitename","verify_url","email_verified","emailjs","send","register_username","register_password","register_email","uuid","role","created_at","Date","updated_at","u","sendEmail","title","to","className","src","alt","onSubmit","handleSubmit","htmlFor","type","required","register","show","showConfirm","confirmBtnText","onConfirm","Component","login","getCurrentUser","userid","getUser","Navbar","onClick","logout","Detail","item","currentUser","newItem","subscribers","push","sub","refresh","image","description","created_by","date","toLocaleDateString","slot","min_subscribers","max_subscribers","join","includes","href","handleSubscribe","parseInt","Edit","edited","delete","close","onChange","rows","edit","path","mdiFloppy","size","mdiTrashCan","showCancel","cancelBtnText","onCancel","ListItem","detail","handleClick","bind","onDelete","hour","s","mdiCalendar","mdiClock","mdiAccount","mdiAccountGroup","closeDetail","mdiClose","List","listItems","map","Form","pristine","dirty","valid","showForm","event_title","event_description","event_img","event_subs_min","event_subs_max","event_date","event_slot","values","min","max","Application","events","handleDelete","handleError","dataObj","sendEventToTheServer","catch","message","setTimeout","get","compare","b","dateA","dateB","sort","VerifyEmail","pathname","window","location","replace","verified","verifyUser","App","nextIndex","emailVerified","localStorage","getItem","obj","removeItem","setItem","exact","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0015891b.chunk.js","sourcesContent":["const bcrypt = require('bcryptjs')\n\nconst baseURL = \"http://localhost:3001/\";\n\nexport const makeReq = async (url, errorMessage = '', options = {}) => {\n  return fetch(url, options)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(errorMessage);\n      }\n  });\n}\n\nexport const getAll = () => {\n  const errorMessage = 'Errore durante il download dei dati';\n  return makeReq(`${baseURL}events`, errorMessage);\n};\n\nexport const getUsers = () => {\n  const errorMessage = 'Errore durante il download dei dati';\n  const url = `${baseURL}users`\n  console.log(url)\n\n  return makeReq(url, errorMessage)\n}\n\nexport const hashIt = async password => {\n  const salt = await bcrypt.genSalt(6)\n  const hashed = bcrypt.hashSync(password, salt)\n\n  return hashed\n}\n\nexport const compareIt = async (password, hashedPassword) => {\n  const validPassword = bcrypt.compareSync(password, hashedPassword)\n\n  return validPassword\n}\n\nexport const sendEventToTheServer = (event) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify(event)\n  };\n    \n  const errorMessage = 'Errore nel collegamento col server';\n\n  return makeReq(`${baseURL}events`, errorMessage, options);\n};\n\nexport const setUser = (user) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: {\n      user: JSON.stringify(user)\n    }\n  }\n\n  const errorMessage = \"errore nel collegamento al server\"\n\n  return makeReq(`${baseURL}users`, errorMessage, options)\n}\n\nexport const getUser = userid => {\n  const options = {\n    method: 'GET',\n    headers: {\n      'Content-type': 'application/json',\n      'Accept': 'application/json'\n    }\n  }\n\n  const errorMessage = \"Errore nel collegamento al server\"\n\n  return makeReq(`${baseURL}users/${userid}`, errorMessage, options)\n}\n\nexport const verifyUser = user => {\n  const options = {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }\n\n  const errorMessage = \"errore nel collegamento al server\"\n\n  return makeReq(`${baseURL}users/${user.id}`, errorMessage, options)\n}\n\nexport const logInOutUser = user => {\n  const options = {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }\n\n  const errorMessage = \"Errore nel collegamento al server\"\n\n  return makeReq(`${baseURL}users/${user.id}`, errorMessage, options)\n}\n\nexport const editEvent = event => {\n  const options = {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify(event)\n  }\n\n  const errorMessage = \"Errore nel collegamento al server\"\n\n  return makeReq(`${baseURL}events/${event.id}`, errorMessage, options)\n}\n\nexport const deleteEventFromTheServer = (eventId) => {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json',\n      'Accept': 'application/json'\n    }\n  };\n\n  const errorMessage = \"Impossibile cancellare l'elemento dal server\";\n\n  const url = `${baseURL}events/${eventId}`;\n    \n  return makeReq(url, errorMessage, options);\n}","import React, { Component } from 'react'\nimport { getUsers, hashIt, compareIt, setUser } from '../utils/network'\nimport {v4 as uuid} from 'uuid'\nimport emailjs, { init } from 'emailjs-com'\nimport { Navigate } from 'react-router'\nimport SweetAlert from 'react-bootstrap-sweetalert'\n\ninit('user_lLGwhhli0BQUl5nTAduzL')\n\nexport default class Login extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = { \n            hashedPass: false,\n            users: [],\n            error: '',\n            emailSent: false,\n            userAlert: false\n        }\n\n        this._isMounted = false\n    }\n\n    componentDidMount(){\n        this._isMounted = true\n    }\n\n    componentWillUnmount(){\n        this._isMounted = false\n    }\n\n    async handleSubmit(e){\n        e.preventDefault()\n        \n        const username = e.target.login_username.value\n        const password = e.target.login_password.value\n\n        getUsers()\n        .then(data => this.setState({users: data}))\n        .then(() => {\n            const user = this.state.users.filter(user => user.username === username)\n\n            if(user.length === 0){\n                this._isMounted && this.setState({error: \"Username non valido\"})\n            } else {\n                compareIt(password, user[0].password)\n                .then(res => {\n                    if(res){\n                        this.props.log({logStatus: true, user: user[0]})\n                    } else {\n                        this._isMounted && this.setState({error: \"Password errata\"})\n                    }\n                })\n                .then(_ => this._isMounted && this.setState({users: []}))\n                //.catch(error => console.log(error))\n            }\n        })\n    }\n\n    async sendEmail(user){\n        const params = {\n            username: user.username,\n            email: user.email,\n            sitename: 'CapodannoCON',\n            verify_url: `/verify/${user.email_verified}`\n        }\n\n        emailjs.send('service_6om229g', 'template_dy4gloo', params)\n    }\n\n    async register(e){\n        e.preventDefault() \n\n        const {register_username, register_password, register_email} = e.target\n\n        //const formData = new FormData() \n\n        const user = {\n            id: uuid(), \n            username: register_username.value, \n            password: register_password.value,\n            email: register_email.value,\n            role: 1, \n            email_verified: uuid(),\n            created_at: new Date(), \n            updated_at: new Date()\n        }\n\n        getUsers()\n        .then(data =>  {\n\n            const userOrEmail = data.filter(u => u.username === user.username || u.email === user.email)\n\n            if(userOrEmail.length === 0){\n                hashIt(register_password.value)\n                .then(data => this.setState({hashedPass: data}))\n                .then(() => {\n                    const user = {\n                        id: uuid(), \n                        username: register_username.value, \n                        password: this.state.hashedPass, \n                        email: register_email.value,\n                        role: 1, \n                        email_verified: uuid(),\n                        created_at: new Date(), \n                        updated_at: new Date()\n                    }\n        \n                    setUser(user)\n                    .then(() => this.sendEmail(user))\n                    .then(() => this.setState({emailSent: true}))\n                })\n            } else {\n                this.setState({userAlert: true})\n            }\n        })\n    }\n\n    render() {\n        const {error} = this.state\n        const {title, logStatus} = this.props\n\n        return (        \n            logStatus ?\n            <Navigate to=\"/\" /> :\n            <div className=\"login-register\">\n                <div className=\"container form-wrapper\">\n                    <img src=\"logo.png\" alt=\"capodannocon\" />\n                    <h3>{title}</h3>\n\n                    <form id=\"login\" className=\"login\" onSubmit={event => this.handleSubmit(event)}>\n                        <h4>Effettua l'accesso...</h4>\n                        <div className=\"form-row\">\n                            <label htmlFor=\"login_username\"><strong>Username</strong></label>\n                            <input type=\"text\" id=\"login_username\" required />\n                        </div>\n                        <div className=\"form-row\">\n                            <label htmlFor=\"login-password\"><strong>Password</strong></label>\n                            <input type=\"password\" id=\"login_password\" required />\n                        </div>\n\n                        {error}\n\n                        <button className=\"btn btn-primary\" type=\"submit\">Login</button>\n                    </form> \n\n                    <form id=\"register\" className=\"register\" onSubmit={event => this.register(event)}>\n                        <h4>...oppure registrati</h4>\n                        <div className=\"form-row\">\n                            <label htmlFor=\"register_username\"><strong>Username</strong></label>\n                            <input type=\"text\" id=\"register_username\" required />\n                        </div>\n                        <div className=\"form-row\">\n                            <label htmlFor=\"register_email\"><strong>Email</strong></label>\n                            <input type=\"email\" id=\"register_email\" required />\n                        </div>\n                        <div className=\"form-row\">\n                            <label htmlFor=\"register_password\"><strong>Password</strong></label>\n                            <input type=\"password\" id=\"register_password\" required />\n                        </div>\n\n                        <button className=\"btn btn-primary\" type=\"submit\">Register</button>\n                    </form>\n                </div>\n\n                <SweetAlert\n                    show={this.state.emailSent}\n                    showConfirm\n                    confirmBtnText=\"Ok\"\n                    title=\"Successo!\"\n                    onConfirm={() => this.setState({emailSent: !this.state.emailSent})}         \n                >\n                    <p>La tua registrazione è avvenuta con successo. Controlla la tua email e segui le istruzioni per verificare il tuo account.</p>\n                </SweetAlert>\n                <SweetAlert\n                    show={this.state.userAlert}\n                    showConfirm\n                    confirmBtnText=\"Ok\"\n                    title=\"Attenzione!\"\n                    onConfirm={() => this.setState({userAlert: false})}         \n                >\n                    <p>Questo utente risulta già registrato.</p>\n                </SweetAlert>\n                \n            </div>\n        )\n    }\n}\n","import { getUser, logInOutUser } from \"./network\"\n\nexport const appURL = 'https://linebreak.it/' \n\nexport const isLoggedIn = user => {\n    /*const loggedIn = localStorage.getItem('isLoggedIn')\n\n    return loggedIn === 'undefined' || !loggedIn ? false : true*/\n\n    return user.logStatus\n}\n\nexport const login = user => {\n    return logInOutUser(user)   \n}\n\nexport const logout = user => {\n    return logInOutUser(user)\n}\n\nexport const getCurrentUser = userid => {\n    return getUser(userid)\n}","import React, { Component } from 'react'\n\nexport default class Navbar extends Component {\n\n    logout(){\n        this.props.log({logStatus: false})\n    }\n\n    render() {\n        return (\n            <header id=\"mast-head\" className=\"navbar navbar-nav\">\n                <div className=\"container\">\n                    <div className=\"app-logo\">\n                        <img src=\"logo.png\" alt=\"capodannocon\" />\n                    </div>  \n                    <nav className=\"main-navigation\" role=\"navigation\">\n                        <ul>\n                            <li onClick={() => this.logout() }>Ciao <strong>{this.props.user.username}</strong>! <span>Logout</span></li>\n                        </ul>\n                    </nav>\n                </div>                \n            </header>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {editEvent} from '../utils/network'\n\nexport default class Detail extends Component {\n\n    constructor(props){\n        super(props) \n\n        this.state = {\n            item: props.item\n        }\n    }\n\n    async handleSubscribe(type){\n        const {item} = this.state \n        const {currentUser} = this.props \n\n        const newItem = {...item}\n\n        switch(type){\n            case 'subscribe':\n                newItem.subscribers.push(currentUser)\n                break;\n            case 'unsubscribe':\n                newItem.subscribers = newItem.subscribers.filter(sub => sub !== currentUser)\n                break;\n        }\n\n        editEvent(newItem)\n        .then(() => this.setState({item: newItem}))\n        .then(() => this.props.refresh())\n    }\n\n    render() {\n        const {currentUser} = this.props\n        const {item} = this.state\n\n        return (\n            <div className=\"item-detail\">\n                <div className=\"item-image\">\n                    <img src={item.image} alt={item.title} />\n                </div>\n                <div className=\"item-infos\">\n                    <table>\n                        <tbody>\n                            <tr>\n                                <td>Titolo: {item.title}</td>\n                            </tr>\n                            <tr>\n                                <td>Descrizione: {item.description}</td>\n                            </tr>   \n                            <tr>\n                                <td>Facilitatore: {item.created_by}</td>\n                            </tr>\n                            <tr><td>Data: {new Date(item.date).toLocaleDateString()}</td></tr>\n                            <tr><td>Slot: {item.slot}</td></tr>\n                            <tr><td>Min. partecipanti: {item.min_subscribers}</td></tr>\n                            <tr><td>Max. partecipanti: {item.max_subscribers}</td></tr>\n                            <tr><td>Iscritti: {item.subscribers.join(', ')}</td></tr>\n                            <tr>\n                                <td>\n                                    {\n                                        item.subscribers.includes(currentUser) ? \n                                        <><span>Sei iscritto!</span> <a href=\"#\" onClick={event => this.handleSubscribe('unsubscribe')}>Disiscriviti</a></> :\n                                        (\n                                            item.subscribers.length === parseInt(item.max_subscribers) ?\n                                            'Numero massimo di iscritti raggiunto' :\n                                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.handleSubscribe('subscribe')}>Iscriviti</button>\n                                        )\n                                    }\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n","import { mdiFloppy, mdiTrashCan } from '@mdi/js'\nimport Icon from '@mdi/react'\nimport React, { Component } from 'react'\nimport {deleteEventFromTheServer, editEvent} from '../utils/network'\nimport SweetAlert from 'react-bootstrap-sweetalert'\n\nexport default class Edit extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            item: props.item,\n            edited: false,\n            delete: false\n        }\n    }\n\n    async edit(e){\n        e.preventDefault()\n        const {item} = this.state\n\n        editEvent(item)\n        .then(data => this.setState({edited: true}))\n        .then(() => this.props.refresh())\n    }\n\n    async delete(){\n        const {item} = this.state \n\n        deleteEventFromTheServer(item.id)\n        .then(() => this.setState({delete: false}))\n        .then(() => this.props.refresh())\n        .then(() => this.props.close())\n    }\n\n    render() {\n        const {item} = this.state\n\n        return (\n            <>\n                <form id=\"item-edit\" className=\"item-edit\">\n                    <div className=\"item-image\">\n                        <img src={item.image} alt={item.title} />\n                    </div>\n                    <div className=\"item-infos\">\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td><label htmlFor=\"title\"><strong>Titolo:</strong></label> <input type=\"text\" id=\"title\" value={item.title} onChange={event => this.setState({item: {...item, title: event.target.value}})}/></td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <label htmlFor=\"description\"><strong>Descrizione:</strong></label>\n                                        <textarea id=\"description\" rows=\"8\" value={item.description} onChange={event => this.setState({item: {...item, description: event.target.value}})}></textarea>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <label htmlFor=\"date\"><strong>Data:</strong></label>\n                                        <select id=\"date\" onChange={event => this.setState({item: {...item, date: event.target.value}})} value={item.date}>\n                                            <option value=\"null\">Seleziona una</option>\n                                            <option value=\"2021-12-29\">29 Dicembre</option>\n                                            <option value=\"2021-12-30\">30 Dicembre</option>\n                                            <option value=\"2021-12-31\">31 Dicembre</option>\n                                            <option value=\"2022-01-01\">1 Gennaio</option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <label htmlFor=\"slot\"><strong>Slot:</strong></label>\n                                        <select id=\"slot\" value={item.slot} onChange={event => this.setState({item: {...item, slot: event.target.value}})}>\n                                            <option value=\"null\">Seleziona uno</option>\n                                            <option value=\"diurno\">Diurno (10-15)</option>\n                                            <option value=\"pomeridiano\">Pomeridiano (15-20)</option>\n                                            <option value=\"serale\">Serale (21 in poi)</option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <label htmlFor=\"min_subscribers\"><strong>Min. partecipanti:</strong></label> \n                                        <input type=\"number\" id=\"min_subscribers\" value={item.min_subscribers} onChange={event => this.setState({item: {...item, min_subscribers: event.target.value}}) } />\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <label htmlFor=\"max_subscribers\"><strong>Max. partecipanti:</strong></label> \n                                        <input type=\"number\" id=\"max_subscribers\" value={item.max_subscribers} onChange={event => this.setState({item: {...item, max_subscribers: event.target.value}}) } />\n                                    </td>\n                                </tr>\n                                <tr><td><strong>Iscritti:</strong> {item.subscribers.join(', ')}</td></tr>\n\n                                <tr className=\"actions\">\n                                    <td><button type=\"button\" className=\"btn btn-success\" onClick={event => this.edit(event)}><Icon path={mdiFloppy} size=\"15px\" /> Salva modifiche</button></td>\n                                    <td><button type=\"button\" className=\"btn btn-danger\" onClick={event => this.setState({delete: !this.state.delete})}><Icon path={mdiTrashCan} size=\"15px\" /> Elimina</button></td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </form>\n                <SweetAlert\n                    show={this.state.edited}\n                    showConfirm\n                    confirmBtnText=\"Ok\"\n                    title=\"Successo!\"\n                    onConfirm={() => this.setState({edited: !this.state.edited})}         \n                >\n                    <p>L'evento è stato modificato con successo!</p>\n                </SweetAlert>\n                <SweetAlert\n                    show={this.state.delete}\n                    showConfirm\n                    showCancel\n                    cancelBtnText=\"Annulla\"\n                    confirmBtnText=\"Procedi\"\n                    title=\"Attenzione!\"\n                    onConfirm={() => this.delete()}         \n                    onCancel={() => this.setState({delete: false})}         \n                >\n                    <p>Stai per eliminare questo evento. Il processo non è reversibile. Sei sicuro?</p>\n                </SweetAlert>\n            </>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '@mdi/react';\nimport { mdiCalendar, mdiClock, mdiAccount, mdiAccountGroup, mdiClose} from '@mdi/js';\nimport Detail from './Detail';\nimport Edit from './Edit';\n//import './ListItem.css';\n\nclass ListItem extends Component {\n  static propTypes = {\n    onDelete: PropTypes.func.isRequired,\n    item: PropTypes.object.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      detail: false\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.onDelete(this.props.item.id);\n  }\n\n  closeDetail(){\n    this.setState({detail: !this.state.detail})\n  }\n\n  render() {\n    const item = this.props.item;\n\n    const {title, description, image, date, slot, created_by, min_subscribers, max_subscribers, subscribers} = item\n\n    const hour = new Date(date).toLocaleDateString('it-IT')\n\n    const s = slot === 'diurno' ? '10-15' : (slot === 'pomeridiano' ? '15-20' : (slot === 'serale' ? '21 in poi' : ''))\n\n    return (\n      <>\n        <li className=\"list__item\" onClick={() => this.setState({detail: true})}>\n          <div className=\"event-card card\">\n            <div className=\"event-meta\">\n              <span className=\"date\"><Icon path={mdiCalendar} size=\"15px\" /> {hour}</span>\n              <span className=\"slot\"><Icon path={mdiClock} size=\"15px\" /> {s}</span>\n              <span className=\"author\"><Icon path={mdiAccount} size=\"15px\" /> {created_by}</span>\n              {//<button onClick={this.handleClick}>×</button>}\n              } \n            </div>\n            <div className=\"event-image\">\n              <img src={image} alt={title} />\n            </div>\n            <div className=\"event-info\">\n              <h5>{title}</h5>\n              <p>{description}</p>\n            </div>          \n            <div className=\"event-footer\">\n              <span><Icon path={mdiAccountGroup} size=\"15px\" /> {`${subscribers.length}/${max_subscribers}`}</span>\n              <span>\n                {\n                  subscribers.length > parseInt(min_subscribers) ?\n                  <strong>Può iniziare!</strong> :\n                  <strong>Partecipanti insufficienti</strong>\n                }\n              </span>\n              <span>{ subscribers.join(', ') }</span>\n            </div>\n          </div>\n        </li>\n        {\n          this.state.detail ?\n            <div className=\"popup\">\n              <button type=\"button\" className=\"btn btn-danger close-form\" onClick={() => this.closeDetail()}>\n                <Icon \n                  path={mdiClose} \n                  size=\"20px\"\n                />  \n              </button>\n              {\n                this.props.user.username === item.created_by ?\n                <Edit item={item} close={this.closeDetail.bind(this)} refresh={this.props.refresh}/> :\n                <Detail item={item} currentUser={this.props.user.username} refresh={this.props.refresh} />\n              }\n            </div> : \n            ''\n        }\n      </>\n    );\n  }\n}\n\nexport default ListItem;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n//import './List.css';\n\nclass List extends Component {\n  static propTypes = {\n    onDelete: PropTypes.func.isRequired,\n    listItems: PropTypes.arrayOf(PropTypes.object).isRequired\n  }\n\n  afterEdit(){\n\n  }\n\n  render() {\n    const fn = item => \n      <ListItem \n        key={item.id} \n        onDelete={() => this.props.onDelete(item.id)}\n        item={item}\n        user={this.props.user}\n        refresh={this.props.refresh}\n      />;\n    \n    let listItems = this.props.listItems;\n        \n    if (listItems.length > 0) {\n      listItems = listItems.map(fn);\n    } else {\n      listItems = <li className=\"list__empty-list\">\n          Lista vuota. <br /> Aggiungi un nuovo evento\n        </li>;\n    }\n\n    return (\n      <ul className=\"list\">\n        {listItems}\n      </ul>\n    );\n  }\n}\n\n\nexport default List;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '@mdi/react'\nimport { mdiClose } from '@mdi/js'\nimport SweetAlert from 'react-bootstrap-sweetalert';\n\nclass Form extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n    //this.pattern = /[a-zA-Z0-9][a-zA-Z0-9'\\- ][\\$\\uFFE5\\^\\+=`~<>{}\\[\\]|\\u3000-\\u303F!-#%-\\x2A,-/:;\\x3F@\\x5B-\\x5D_\\x7B}\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E3B\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]+/g\n\n    //this.pattern = /^[a-zA-Z0-9][a-zA-Z0-9'\\- ]+$/;\n    //this.emptyPattern = /^\\s*$/;\n    this.state = {\n      value: '',\n      pristine: true, \n      dirty: false, \n      valid: false,\n      showForm: false,\n      title: '',\n      description: '',\n      event: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    \n    const {event_title, event_description, event_img, event_subs_min, event_subs_max, event_date, event_slot} = e.target \n\n    const values = {\n      title: event_title.value, \n      description: event_description.value, \n      image: event_img.value,\n      min: event_subs_min.value,\n      max: event_subs_max.value,\n      date: event_date.value, \n      slot: event_slot.value\n    }\n\n    this.props.onSubmit({values, error: false});\n    this.setState({dirty: false, valid: false, showForm: false, event: true, title: false, description: false});\n  }\n\n  render() {\n\n    const {showForm, event} = this.state\n\n    return (\n      <>\n        <button type=\"button\" onClick={() => this.setState({showForm: !showForm})} className=\"btn btn-primary add-event\">Aggiungi evento</button>\n\n        {\n          showForm ?\n          <div className=\"popup\">\n            <button type=\"button\" className=\"btn btn-danger close-form\" onClick={() => this.setState({showForm: !showForm, title: '', description: ''})}>\n              <Icon \n                path={mdiClose} \n                size=\"20px\"\n              />\n            </button>\n            <form onSubmit={this.handleSubmit} className=\"event-form\">\n              <div className=\"form-row\">\n                <div className=\"form-col\">\n                  <label htmlFor=\"event_title\"><strong>Nome evento</strong></label>\n                  <input type=\"text\" id=\"event_title\" required />\n                </div>\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-col\">\n                  <label htmlFor=\"event_description\"><strong>Descrizione evento</strong></label>\n                  <textarea type=\"text\" id=\"event_description\" ></textarea>\n                </div>\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-col\">\n                  <label htmlFor=\"event_img\"><strong>Immagine (incolla un url immagine)</strong></label>\n                  <input type=\"text\" id=\"event_img\" required />\n                </div>\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-col half\">\n                  <label htmlFor=\"event_subs_min\"><strong>Numero partecipanti minimi</strong></label>\n                  <input type=\"number\" id=\"event_subs_min\" required />\n                </div>\n                <div className=\"form-col half\">\n                  <label htmlFor=\"event_subs_max\"><strong>Numero partecipanti massimi</strong></label>\n                  <input type=\"number\" id=\"event_subs_max\" />\n                </div>\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-col\">\n                  <label htmlFor=\"event_date\"><strong>Data</strong></label>\n                  <select id=\"event_date\" required onChange={event => event.target.value}>\n                    <option value=\"null\">Seleziona una</option>\n                    <option value=\"2021-12-29\">29 Dicembre</option>\n                    <option value=\"2021-12-30\">30 Dicembre</option>\n                    <option value=\"2021-12-31\">31 Dicembre</option>\n                    <option value=\"2022-01-01\">1 Gennaio</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"form-row\">\n                <div className=\"form-col\">\n                  <label htmlFor=\"event_slot\"><strong>Slot</strong></label>\n                  <select id=\"event_slot\" required onChange={event => event.target.value}>\n                    <option value=\"null\">Seleziona uno</option>\n                    <option value=\"diurno\">Diurno (10-15)</option>\n                    <option value=\"pomeridiano\">Pomeridiano (15-20)</option>\n                    <option value=\"serale\">Serale (21 in poi)</option>\n                  </select>\n                </div>\n              </div>\n              <button type=\"submit\" className=\"btn btn-success\">Aggiungi evento</button>\n            </form>\n          </div>\n          : ''\n        }\n        <SweetAlert\n            show={event}\n            showConfirm\n            confirmBtnText=\"Ok\"\n            title=\"Successo!\"\n            onConfirm={() => this.setState({event: !event})}         \n        >\n            <p>L'evento è stato aggiunto con successo!</p>\n        </SweetAlert>\n      </>\n    );\n  }\n}\n\nexport default Form;","import React, { Component } from 'react'\nimport Navbar from './Navbar'\nimport List from './List'\nimport Form from './Form'\nimport {v4 as uuid} from 'uuid'\nimport { getAll, deleteEventFromTheServer, sendEventToTheServer } from '../utils/network'\nimport { Navigate } from 'react-router'\n\nexport default class Application extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state= {\n            events: [],\n            error: ''\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleError = this.handleError.bind(this);\n        this._isMounted = false\n    }\n\n    handleSubmit(dataObj) {\n        if (dataObj.error === false) {\n            const {title, description, image, min, max, date, slot} = dataObj.values\n\n            const event = {\n                id: uuid(), \n                title, \n                description, \n                image, \n                date, \n                slot, \n                min_subscribers: min,\n                max_subscribers: max, \n                subscribers: [], \n                created_by: this.props.user.username, \n                created_at: new Date(), \n                updated_at: new Date()\n            };\n            const events = [...this.state.events, event];\n            this._isMounted && this.setState({events});\n\n            sendEventToTheServer(event)\n                .catch(this.handleError);\n        }\n    }\n  \n    handleDelete(id) {\n        let events = this.state.events;\n        events = events.filter(event => event.id !== id);\n        this.setState({events});\n        deleteEventFromTheServer(id)\n          .catch(this.handleError);\n    }\n    \n    handleError(error) {\n        this.setState({error: `Error: ${error.message}`}, () =>\n            setTimeout(() => this.setState({error: ''}), 3000)\n        );\n    }\n    \n    componentDidMount() {\n        this._isMounted = true\n        this._isMounted && this.get()\n    }\n\n    componentWillUnmount(){\n        this._isMounted = false\n    }\n    \n    async get(){\n        function compare( a, b ) {\n            const dateA = new Date(a.date).toLocaleDateString()\n            const dateB = new Date(b.date).toLocaleDateString()\n    \n            if ( dateA < dateB ){\n                return -1;\n            }\n            if ( dateA > dateB ){\n                return 1;\n            }\n            return 0;\n        }\n\n        getAll()\n            .then(data => {\n                const events = data.sort(compare)\n\n                this.setState({events: events})\n            })\n            .catch(this.handleError);\n    }\n    \n    render() {\n        const {logStatus} = this.props\n\n        return (\n            logStatus ?\n                <>\n                    <Navbar log={ this.props.log.bind(this) } user={this.props.user}/>  \n                    <div className=\"container\">\n                        <Form onSubmit={this.handleSubmit} />\n                        <List onDelete={ this.handleDelete } listItems={this.state.events} user={this.props.user} refresh={this.get.bind(this)} />\n                    </div>\n                </> :\n                <Navigate to=\"/login\" />\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Navigate } from 'react-router'\nimport { getUsers, verifyUser } from '../utils/network'\nexport default class VerifyEmail extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            users: [],\n            pathname: window.location.pathname.replace('/verify/', ''),\n            verified: false,\n            error: false\n        }\n    }\n\n    componentDidMount(){\n        const {pathname} = this.state\n\n        getUsers()\n        .then(data => !this.state.verified && this.setState({users: data}))\n        .then(() => {\n            let user = this.state.users.filter(user => user.email_verified === pathname)\n\n            if(user.length > 0){\n                user = user[0]\n                user.logStatus = true\n                user.email_verified = true\n                verifyUser(user)\n                .then(() => this.props.log({logStatus: 'verified', user: user}))\n                .then(() => this.setState({users: [], verified: true}))\n                .catch(() => this.setState({error: 'Provi a fare il furbo?', users: []}))\n            }\n        })\n    }\n\n    componentWillUnmount(){\n        this.state.verified && this.setState({verified: false})\n    }\n\n    render() {\n        const {verified, error} = this.state\n\n        return (\n            verified ? \n            <Navigate to=\"/\" /> :\n            (\n                error ?\n                error : \n                <p>Attendi mentre verifichiamo la tua email</p>\n            )\n        )\n    }\n}\n","import React, { Component } from 'react';\n//import getId from './utils/generateId';\nimport './sass/App.scss'\nimport Login from './components/Login';\nimport { logout, login, getCurrentUser } from './utils/extras'\nimport Application from './components/Application';\nimport {\n    BrowserRouter as Router, \n    Routes as Switch,\n    Route,\n} from 'react-router-dom'\nimport VerifyEmail from './components/VerifyEmail';\nimport SweetAlert from 'react-bootstrap-sweetalert'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      error: '', \n      nextIndex: false,\n      logStatus: false,\n      currentUser: {},\n      emailVerified: false,\n    };\n  }\n\n  componentDidMount(){\n    const user = localStorage.getItem('currentUser')\n    if(user){\n      getCurrentUser(user)\n      .then(data => this.setState({currentUser: data, logStatus: data.logStatus}))\n    }\n  }\n\n  log(obj){\n    const {logStatus, user} = obj\n\n    switch(logStatus){\n      case false:\n        const {currentUser} = this.state\n        currentUser.logStatus = false\n        logout(currentUser)\n        this.setState({logStatus: false, currentUser: {}})\n        localStorage.removeItem('currentUser')\n        break;\n      case true:\n        user.logStatus = true\n        login(user)\n          .then(() => {\n            this.setState({logStatus: true, currentUser: user})\n          })\n\n          localStorage.setItem('currentUser', user.id)\n        break;\n      case 'verified':\n        user.logStatus = true\n        login(user)\n          .then(() => {\n            this.setState({logStatus: true, currentUser: user, emailVerified: true})\n          })\n          localStorage.setItem('currentUser', user.id)\n        break;\n    }\n  }\n  \n  render() {\n\n    const {logStatus} = this.state \n\n    return ( \n      <>\n        <Router>\n          <Switch>\n            <Route exact path=\"/login\" element={<Login title=\"You are not logged in :(\" log={this.log.bind(this)} logStatus={logStatus} /> } />\n            <Route exact path=\"/\" element={<div><Application log={this.log.bind(this)} logStatus={logStatus} user={this.state.currentUser}/></div>} />\n            <Route path=\"/verify/*\" element={<VerifyEmail log={this.log.bind(this)} />} />\n          </Switch>\n        </Router>\n        <SweetAlert\n            show={this.state.emailVerified}\n            showConfirm\n            confirmBtnText=\"Ok\"\n            title=\"Successo!\"\n            onConfirm={() => this.setState({emailVerified: !this.state.emailVerified})}         \n        >\n            <p>La tua email è stata verificata con successo</p>\n        </SweetAlert>\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}